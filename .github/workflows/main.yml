name: Testing

on:
  pull_request:
    branches: master

jobs:
  test_pr:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Getting code
        uses: actions/checkout@master
      - name: Getting Python
        uses: actions/setup-python@master
        with:
          python-version: "3.8"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-pip-3.8-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.8-
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Installing dependencies
        run: poetry install
      - name: Running tests
        run: make coverage
      - name: Running coverage check
        run: make coverage_cmd_report
      - name: Generate coverage report
        run: make coverage_xml_report
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: pull_requests

  validate_typing:
    name: Validate Typing
    runs-on: ubuntu-latest
    steps:
      - name: Getting code
        uses: actions/checkout@master
      - name: Getting Python
        uses: actions/setup-python@master
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Installing dependencies
        run: poetry install
      - name: Running types checks
        run: make check_mypy

  validate_codestyle:
    name: Validate Code Style
    runs-on: ubuntu-latest
    steps:
      - name: Getting code
        uses: actions/checkout@master
      - name: Getting Python
        uses: actions/setup-python@master
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Installing dependencies
        run: poetry install
      - name: Running codestyle checks
        run: make check_black
      - name: Running imports check
        run: make check_imports

  validate_version:
    name: Validate Version
    runs-on: ubuntu-latest
    steps:
      - name: Getting code
        uses: actions/checkout@master
      - name: Getting Python
        uses: actions/setup-python@master
      - name: Check if pyproject is changed
        uses: technote-space/get-diff-action@v6.1.1
        id: pyproject_is_changed
        with:
          SUFFIX_FILTER: .toml
      - name: Check if python files are changed
        uses: technote-space/get-diff-action@v6.1.1
        id: python_files_are_changed
        with:
          SUFFIX_FILTER: .py
      - name: Fail if pyproject is not changed and files are changed
        if: ${{ steps.pyproject_is_changed.outputs.count != 1 && steps.python_files_are_changed.outputs.count > 0 }}
        run: exit 1
