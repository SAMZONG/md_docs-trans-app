name: Linting
on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: true
        type: string
      command:
        description: 'Command to run'
        required: true
        type: string
      system:
        description: 'System to run on'
        required: false
        type: string
        default: ubuntu-20.04
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  validate:
    name: Validate
    runs-on: ${{ inputs.system }}
    steps:
      - name: Getting code
        uses: actions/checkout@v3
      - name: Getting Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
      - name: Load cached poetry
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: ${{ runner.os }}-poetry-${{ steps.setup-python.outputs.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('poetry.lock') }}-${{ steps.setup-python.outputs.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Installing dependencies
        run: poetry install
      - name: Running types checks
        run: ${{ inputs.command }}
